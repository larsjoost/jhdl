#!/bin/bash

set -e

SCRIPTPATH=$(dirname ${BASH_SOURCE[0]})

usage()
{
    cat << EOF
Command: $0 $ALL_ARGUMENTS

usage: $0 options

OPTIONS:
   -h           Show this message
   -f <name>    Filename
   -d <name>    Do filename
   -o <name>    VCD output filename
   -x           Debug
   -v           Verbose 
EOF
}

while getopts ":hd:f:o:vx" OPTION
do
    case $OPTION in
        h)
            usage
            exit 1
            ;;
        f)
            FILENAME="$OPTARG"
            ;;
        d)
            DO_FILENAME="-d $OPTARG"
            ;;
        o)
            VCD_FILENAME="$OPTARG"
            ;;
        v)
            VERBOSE="-v"
            ;;
        x)
            DEBUG="gdb --args"
            ;;
        ?)
            echo "Unknown option $OPTARG"
            usage
            exit 1
            ;;
        :)
            echo "No argument value for option $OPTARG"
            usage
            exit 1
            ;;
    esac
done

if [ -z "$FILENAME" ]; then
    echo "Filename must be specified" 1>&2
    usage
    exit 1
fi

KERNEL=$SCRIPTPATH/kernel/lib

make -C $KERNEL > /dev/null

filebase="${FILENAME%.*}"
$SCRIPTPATH/hdlc.sh -f $FILENAME 
sourcefile="$filebase.hpp"
targetdir=$(dirname $FILENAME)
templatefiles=$(ls $SCRIPTPATH/templates/*.cpp)
targets=""
for i in $templatefiles; do
    target=$targetdir/$(basename "$i")
    targets="$targets $target"
    if [ ! -e $target ]; then
        cp $i $target
        MODULE_NAME=$($SCRIPTPATH/hdlf -f $FILENAME)
        sed -i "s/%module%/${MODULE_NAME}/g" $target
        sed -i "s/%include%/$sourcefile/g" $target
    fi
done
g++ -std=c++14 -g -pthread -I$SCRIPTPATH/kernel/lib -I$SCRIPTPATH/../std -o $filebase $sourcefile $targets $KERNEL/*.o $SCRIPTPATH/../std/*.o
if [ -n "$VCD_FILENAME" ]; then
    if [ ! -e $VCD_FILENAME ]; then
        mkfifo --mode=666 $VCD_FILENAME
    fi
    shmidcat $VCD_FILENAME | gtkwave -v -I output.sav &
    $DEBUG ./$filebase $DO_FILENAME -o $VCD_FILENAME $VERBOSE 
else
    $DEBUG ./$filebase $DO_FILENAME $VERBOSE
fi
